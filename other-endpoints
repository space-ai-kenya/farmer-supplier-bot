#Endpoint for creating and inserting an Agent into db from a form using POST
###############################################################################################################################################
@app.route('/reg_agentForm', methods=['GET','POST'])
def reg_agent_form():
    if request.method == 'POST':
        a_name = request.form.get('name')
        a_phone = request.form.get('phone')
        a_location = request.form.get('location')
        a_regdate = datetime.now(timezone.utc)
        insertagent = Agent(a_name, a_phone, a_location, a_regdate)

        try:
            db.session.add(insertagent)
            db.session.commit()
            return redirect('/')
        except: 
            return 'An Error occured registering the farmer.'
    else:
        return render_template('reg_farmer.html')


#Endpoint for creating and inserting a Agent into db using a JSON POST request. ###########################################################
##################################################################################################################################################
@app.route('/reg_agentJson', methods = ['POST'])
def reg_agent_json():
    if request.is_json:
        data = request.get_json()
        name = data.get('name', None)
        phone = data.get('phone', None)
        location = data.get('location', None)
        a_regdate = datetime.now(timezone.utc)

        try:
            insertagent = Agent(name, phone, location, a_regdate)
            db.session.add(insertagent)
            db.session.commit()
            return jsonify({"message": "Farmer added successfully", "status": "success"}), 200
        except:
            return jsonify({"message": "Request must be JSON", "status": "error"}), 400


#Endpoint for creating and inserting an Supplier into db from a form using POST
###############################################################################################################################################
@app.route('/reg_supplierForm', methods=['POST'])
def reg_supplier_form():
    if request.method == 'POST':
        s_name = request.form.get('name')
        s_phone = request.form.get('phone')
        s_location = request.form.get('location')
        s_regdate = datetime.now(timezone.utc)
        insertsupplier = Supplier(s_name, s_phone, s_location, s_regdate)

        try:
            db.session.add(insertsupplier)
            db.session.commit()
            return redirect('/')
        except: 
            return 'An Error occured registering the farmer.'
    else:
        return render_template('@@@@@@@@@@@@@@@@@@@@@')  # <---------- dont forget


#Endpoint for creating and inserting a Supplier into db using a JSON POST request. ###########################################################
##################################################################################################################################################
@app.route('/reg_supplierJson', methods = ['POST'])
def reg_supplier_json():
    if request.is_json:
        data = request.get_json()
        name = data.get('name', None)
        phone = data.get('phone', None)
        location = data.get('location', None)
        s_regdate = datetime.now(timezone.utc)

        try:
            insertsupplier = Supplier(name, phone, location, s_regdate)
            db.session.add(insertsupplier)
            db.session.commit()
            return jsonify({"message": "Farmer added successfully", "status": "success"}), 200
        except:
            return jsonify({"message": "Request must be JSON", "status": "error"}), 400